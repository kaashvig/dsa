//(last - first)index+1
#include <iostream>
using namespace std;

 int firstocc(int arr[],int size,int key){
     int start = 0;
     int end = size-1;
     int mid = start + (end-start)/2;
     int ans =-1;
     while(start <= end){
         if(arr[mid] == key){
             ans = mid;
             end=mid-1;
         }
         else if (arr[mid] < key){
             start = mid+1;
         }
         else if (arr[mid] > key){
             end = mid-1;
         }
         mid = start +(end-start)/2;
     }
     return ans;
 }

 int lastocc(int arr[],int size,int key){
     int start = 0;
     int end = size-1;
     int mid = start + (end-start)/2;
     int ans =-1;
     while(start <= end){
         if(arr[mid] == key){
             ans = mid;
             start=mid+1;
         }
         else if (arr[mid] < key){
             start = mid+1;
         }
         else if (arr[mid] > key){
             end = mid-1;
         }
         mid = start +(end-start)/2;
     }
     return ans;
 }
int totalocc(int last, int first) {
    if (first == -1 || last == -1) return 0;
    return last - first + 1;
}
int main(){
    int even[5] = {1, 2, 3, 3, 5}; 
    int key = 3;                   
    int first = firstocc(even, 5, key); 
    int last = lastocc(even, 5, key);

    cout << "First occurrence of 3 is at index: " << first << endl;
    cout << "Last occurrence of 3 is at index: " << last << endl;
    cout << "Total occurrences of 3: " << totalocc(last, first) << endl;


 return 0;   
}

